*radical.txt*	Convert decimal, hex, octal, binary number representations

Author: David BÃ¼rgin <dbuergin@gluet.ch>
License: Same terms as Vim itself (see |license|)

DESCRIPTION					*radical*

Radical.vim helps you work with integer representations in the programmer's
bases, that is in decimal, hexadecimal, octal, and binary representations.

Provided are mappings of two kinds: a mapping to view the number under the
cursor in different bases, and mappings to convert the number to some base.

This plugin depends on the |magnum| library.

						*<Plug>RadicalView*
Prints the base representations of the number under the cursor or the number
selected in Visual mode.  Defined in Normal and Visual mode.

Default key mappings: >
    nmap gA <Plug>RadicalView
    xmap gA <Plug>RadicalView
<
						*<Plug>RadicalCoerceToDecimal*
						*<Plug>RadicalCoerceToHex*
						*<Plug>RadicalCoerceToOctal*
						*<Plug>RadicalCoerceToBinary*
Converts the number under the cursor (or to the right of the cursor) to
decimal, hexadecimal, octal, or binary representation, respectively.

Default key mappings: >
    nmap crd <Plug>RadicalCoerceToDecimal
    nmap crx <Plug>RadicalCoerceToHex
    nmap cro <Plug>RadicalCoerceToOctal
    nmap crb <Plug>RadicalCoerceToBinary

For all mappings the base of the target number can be forced by giving a
count.  For example, "16gA" targets a hexadecimal number.

Coercion output can be controlled by specifying a format string for each base
in the buffer-local Dictionary "b:radical_bases".  It should look like this: >
    {8: {'format': '0o%s'}}

All default mappings can be suppressed by setting "g:radical_no_mappings" in
|vimrc|.

 vim:tw=78:ts=8:ft=help:norl:
